const state={stories:[],friends:[],filter:''};const el=s=>document.querySelector(s);
async function loadJSON(p){const r=await fetch(p,{cache:'no-store'});if(!r.ok)throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å '+p);return r.json();}
function formatDate(iso){try{const d=new Date(iso);return d.toLocaleDateString('ru-RU',{year:'numeric',month:'long',day:'numeric'})}catch(e){return iso}}
function pickImageVal(x){return typeof x==='string'?x:(x&&(x.image||x.file||x.src))||''}
function pickVideoVal(x){return typeof x==='string'?x:(x&&(x.video||x.file||x.src))||''}
function isVideoFile(p){return /\.(mp4|webm|ogg)$/i.test(p||'')}
function isYouTube(u){return /(youtube\.com\/watch\?v=|youtu\.be\/)/i.test(u||'')}
function ytEmbed(u){try{let id='';if(u.includes('youtu.be/'))id=u.split('youtu.be/')[1].split(/[?&]/)[0];else id=new URL(u).searchParams.get('v');return `<div class="embed"><iframe src="https://www.youtube.com/embed/${id}" allowfullscreen></iframe></div>`}catch(e){return ''}}
function storyCard(s){const tags=(s.tags||[]).map(t=>`<span class="tag">#${t}</span>`).join(' ');
const images=(s.images||[]).map(v=>`<img src="assets/${pickImageVal(v)}" alt="">`).join('');
const videos=(s.videos||[]).map(v=>{const src=pickVideoVal(v);if(isVideoFile(src))return `<div class="videos"><video controls src="assets/${src}"></video></div>`;if(isYouTube(src))return ytEmbed(src);return ''}).join('');
return `<article class="card"><div class="meta"><span>üìÖ ${formatDate(s.date)}</span>${s.mood?`<span>‚Ä¢</span><span>üïÆ ${s.mood}</span>`:''}${s.author?`<span>‚Ä¢</span><span>üë§ ${s.author}</span>`:''}</div><h4>${s.title}</h4><p>${s.text}</p><div>${tags}</div><div class="images">${images}</div>${videos}</article>`}
function friendCard(f){const a=f.avatar?`<img class="avatar" src="assets/${pickImageVal(f.avatar)}" alt="">`:'';const link=f.link?`<div><a href="${f.link}" target="_blank" rel="noreferrer">—Å—Å—ã–ª–∫–∞</a></div>`:'';return `<div class="friend">${a}<div class="name">üë§ ${f.name}${f.nickname?' ‚Äî '+f.nickname:''}</div><div class="quote">‚Äú${f.quote||''}‚Äù</div><div class="bio">${f.memory||''}</div>${link}</div>`}
function render(){const q=state.filter.toLowerCase().trim();const filtered=state.stories.filter(s=>[s.title,s.text,...(s.tags||[])].join(' ').toLowerCase().includes(q));el('#timelineList').innerHTML=filtered.map(storyCard).join('');el('#noResults').style.display=filtered.length?'none':'block';el('#friendsGrid').innerHTML=state.friends.map(friendCard).join('');const imgs=state.stories.flatMap(s=>(s.images||[])).map(pickImageVal).filter(Boolean);const uniq=[...new Set(imgs)];el('#galleryGrid').innerHTML=uniq.map(n=>`<img src="assets/${n}" alt="">`).join('')}
function bind(){el('#search').addEventListener('input',e=>{state.filter=e.target.value;render()})}
async function init(){try{const [stories,friends,subs]=await Promise.all([loadJSON('data/stories.json'),loadJSON('data/friends.json'),loadJSON('data/submissions.json')]);const approved=(subs.submissions||[]).filter(x=>x.approved);state.stories=[...(stories.stories||[]),...approved].sort((a,b)=>new Date(b.date)-new Date(a.date));state.friends=friends.friends||[];render();bind()}catch(e){console.error(e);el('#timelineList').innerHTML='<p class="muted">–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ. –ü—Ä–æ–≤–µ—Ä—å –ø–∞–ø–∫—É data/</p>'}}init();